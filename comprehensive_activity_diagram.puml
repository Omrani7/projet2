@startuml UniNest_Comprehensive_Activity_Diagram

!theme plain
title "UniNest Platform - Comprehensive Activity Diagram\nShowcasing Complex Solutions & Innovative Features"

|#LightBlue|Web Scraping Module|
start
:🤖 **Automated Web Scraping System**
Playwright-based scraping from external sources;
note right
  **Complex Solution #1: Multi-Source Data Aggregation**
  • Playwright automation framework
  • Concurrent scraping from Tayara & Immobilier
  • Browser context management
  • Anti-detection mechanisms
  • Pagination handling (up to 60 pages)
  • JSON data extraction from __NEXT_DATA__
end note

:Initialize Browser Manager
Create Playwright context;

:Navigate to External Property Sites
(Tayara.tn, Immobilier.com.tn);

:Extract Property Data
• Title, Price, Location
• Images, Description
• Contact Information
• Property Features;

:Apply Data Validation
& Geocoding Services;

:Store in PostgreSQL Database
with SourceType = SCRAPED;

|#LightGreen|ML Compatibility Engine|

:🧠 **Advanced Compatibility Algorithm**
Multi-criteria ML-based scoring;
note right
  **Complex Solution #2: Intelligent Matching**
  • Academic compatibility (University + Field)
  • Lifestyle preferences matching
  • Budget optimization scoring
  • Location proximity calculation
  • Age compatibility assessment
  • Weighted scoring algorithm (40% academic, 25% lifestyle, etc.)
end note

:Calculate University Compatibility
(40% weight - Primary factor);

:Analyze Field of Study Similarity
(25% weight - Secondary factor);

:Evaluate Lifestyle Preferences
Using Jaccard similarity;

:Assess Budget Compatibility
With comfort ratio calculation;

:Generate Compatibility Score
(0.0 to 1.0 scale);

|#LightCoral|Student Discovery Workflow|

:👨‍🎓 **Student Accesses Platform**;

if (User authenticated?) then (yes)
  :Access Personalized Dashboard;
else (no)
  :Register/Login Process;
  :Complete Academic Profile
  • University, Field of Study
  • Age, Lifestyle Preferences
  • Budget Range, Location Preferences;
endif

:🔍 **Property Discovery System**;

fork
  :Browse Map-based Interface
  with Geospatial Filtering;
fork again
  :Use Advanced Search Filters
  • Location radius
  • Price range
  • Property type
  • Amenities;
fork again
  :Access ML-Powered Recommendations
  Based on user profile;
end fork

:Select Property of Interest;

|#LightYellow|Inquiry Management System|

:📝 **Create Property Inquiry**;
note right
  **Complex Solution #3: Multi-User Communication**
  • Real-time WebSocket notifications
  • Email integration
  • Status tracking & automation
  • Deal closure with cascade effects
  • Conflict resolution for multiple inquiries
end note

:Fill Inquiry Form
• Personal message
• Contact information
• Viewing preferences;

:Submit Inquiry to Owner;

|#Orange|Owner Response Workflow|

:📧 **Owner Receives Notification**
Email + WebSocket alert;

:Owner Reviews Inquiry
in Dashboard;

if (Multiple inquiries for same property?) then (yes)
  :View All Competing Inquiries
  with Student Profiles;
  
  :Evaluate Students
  • Review messages
  • Check compatibility scores
  • Consider application timing;
  
  :Select Preferred Student;
  
  :🤝 **Close Deal with Chosen Student**;
  note right
    **Complex Solution #4: Cascade Effect Management**
    • Automatically notify rejected students
    • Update property status to RENTED
    • Remove from search results
    • Update all related inquiries
    • Send appropriate notifications
  end note
  
  :Notify Other Students
  "Property No Longer Available";
  
else (no)
  :Reply to Single Inquiry;
endif

|#LightPink|Roommate Matching System|

:🏠 **Student Seeks Roommate**;

:Create Roommate Announcement
• Property requirements
• Lifestyle preferences
• Budget constraints
• Personal traits;

:🤖 **ML Recommendation Engine**
Processes announcement;

fork
  :Generate Personalized Recommendations
  Based on compatibility algorithm;
fork again
  :Create High-Quality Matches
  (>70% compatibility);
fork again
  :Find Compatible Students
  Same university/field priority;
fork again
  :Show All Available Announcements
  With compatibility scores;
end fork

:Student Reviews Recommendations
with Compatibility Indicators;

:Send Connection Request
to Compatible Roommate;

|#LightCyan|Real-time Communication|

:💬 **WebSocket Messaging System**;
note right
  **Complex Solution #5: Real-time Features**
  • STOMP protocol implementation
  • User-specific message queues
  • Typing indicators
  • Message status tracking
  • Cross-platform synchronization
end note

:Establish WebSocket Connection;

:Exchange Messages
in Real-time;

:Coordinate Property Viewing
& Roommate Meeting;

|#LightGray|Admin Analytics & Monitoring|

:📊 **Admin Dashboard Analytics**;

fork
  :Monitor Scraping Performance
  • Success rates
  • Data quality metrics
  • Source reliability;
fork again
  :Track User Engagement
  • Compatibility score effectiveness
  • Inquiry conversion rates
  • Platform usage patterns;
fork again
  :Manage System Health
  • Database performance
  • WebSocket connections
  • Email delivery status;
end fork

:Generate Comprehensive Reports
for Platform Optimization;

|#LightBlue|Data Integration & Sync|

:🔄 **Automated Data Synchronization**;
note right
  **Complex Solution #6: Data Management**
  • Duplicate detection algorithms
  • Data quality validation
  • Geocoding integration
  • Image processing & storage
  • Database optimization
end note

:Validate & Deduplicate
Scraped Properties;

:Geocode Addresses
using LocationIQ API;

:Optimize Database Indexes
for Geospatial Queries;

:Update Search Results
with Fresh Data;

stop

note bottom
  **Key Innovations Demonstrated:**
  1. **Automated Web Scraping** - Playwright-based multi-source data aggregation
  2. **ML Compatibility Engine** - Multi-criteria academic & lifestyle matching
  3. **Real-time Communication** - WebSocket-based messaging & notifications
  4. **Intelligent Recommendations** - Personalized property & roommate suggestions
  5. **Complex Workflow Management** - Multi-user inquiry handling with cascade effects
  6. **Geospatial Integration** - Map-based discovery with proximity calculations
  
  **Technical Stack:**
  • Spring Boot 3.x with PostgreSQL
  • Angular 17+ with TypeScript
  • Playwright for web automation
  • WebSocket/STOMP for real-time features
  • JWT authentication & role-based security
  • PostGIS for geospatial operations
end note

@enduml 